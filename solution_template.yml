AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda and API Gateway
Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: arn:aws:iam::266112848176:role/LambdaExecutionRole
      Code:
        ZipFile: !Sub |
          exports.handler = function(event, context, callback) {
            callback(null, 'Hello World!')
          }
      Runtime: nodejs6.10

  ## Gateway RestAPI
  GatewayAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: 'Test API'
      Name: 'MyAPI'
      FailOnWarnings: 'true'

  ## Gateway Needs Permission to Execute Lambda Function
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt
        - LambdaFunction
        - Arn
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GatewayAPI}/*/*/*"

  ## Stage to Define path through API Deployment is accesible    
  GatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: Test
      Description: Testing Stage
      RestApiId: !Ref GatewayAPI
      DeploymentId: !Ref GatewayDeployment
      MethodSettings:
        - ResourcePath: '/*'
          HttpMethod: '*'
          DataTraceEnabled: 'true'
  
  ## Deployment of Resources on Gateway
  GatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: GatewayRequest
    Properties:
      RestApiId: !Ref GatewayAPI
      StageName: 'Test-Stage'

  ## Gateway API Resource tie Resource with Rest API
  GatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref GatewayAPI
      ParentId: !GetAtt
        - GatewayAPI
        - RootResourceId
      PathPart: 'hello'
  
  ## Gateway Method -- Http Method associated with Resouces
  GatewayRequest:
    DependsOn: LambdaPermission
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref GatewayResource
      RestApiId: !Ref GatewayAPI
      Integration: 
        IntegrationHttpMethod: 'POST'
        Type: 'AWS'
        Uri: !Join 
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !GetAtt 
              - LambdaFunction
              - Arn
            - /invocations
        PassthroughBehavior: WHEN_NO_TEMPLATES
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates: {"application/json": "$input.json('$.body')"}
      MethodResponses: 
        - StatusCode: 200
          ResponseModels: { "application/json": "Empty" }